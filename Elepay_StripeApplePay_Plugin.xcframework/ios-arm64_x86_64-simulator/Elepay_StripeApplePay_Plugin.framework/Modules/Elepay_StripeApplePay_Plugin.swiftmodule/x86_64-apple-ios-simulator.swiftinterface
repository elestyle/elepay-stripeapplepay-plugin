// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name Elepay_StripeApplePay_Plugin
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
@_exported import Elepay_StripeApplePay_Plugin
import PassKit
import StripeApplePay
import StripeCore
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc public enum StripeApplePayPluginPaymentStatus : Swift.Int {
  case success
  case error
  case userCancellation
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public protocol StripeApplePayPluginDelegate {
  @objc func applePayPluginContext(_ status: Elepay_StripeApplePay_Plugin.StripeApplePayPluginPaymentStatus, error: (any Swift.Error)?)
}
@_inheritsConvenienceInitializers @objc final public class StripeApplePayPlugin : ObjectiveC.NSObject {
  @objc(sharedPlugin) public static let shared: Elepay_StripeApplePay_Plugin.StripeApplePayPlugin
  @objc final public func setup(publishableKey: Swift.String)
  @objc final public func makeApplePay(request: PassKit.PKPaymentRequest, clientSecret: Swift.String, delegate: any Elepay_StripeApplePay_Plugin.StripeApplePayPluginDelegate) -> Swift.Bool
  @objc public static func pluginDeviceSupportsApplePay() -> Swift.Bool
  @objc public static func paymentRequest(withMerchantIdentifier merchantIdentifier: Swift.String, country countryCode: Swift.String, currency currencyCode: Swift.String) -> PassKit.PKPaymentRequest
  @objc override dynamic public init()
  @objc deinit
}
extension Elepay_StripeApplePay_Plugin.StripeApplePayPlugin : StripeApplePay.ApplePayContextDelegate {
  final public func applePayContext(_ context: StripeApplePay.STPApplePayContext, didCreatePaymentMethod paymentMethod: StripeCore.StripeAPI.PaymentMethod, paymentInformation: PassKit.PKPayment, completion: @escaping StripeApplePay.STPIntentClientSecretCompletionBlock)
  final public func applePayContext(_ context: StripeApplePay.STPApplePayContext, didCompleteWith status: StripeApplePay.STPApplePayContext.PaymentStatus, error: (any Swift.Error)?)
}
extension Elepay_StripeApplePay_Plugin.StripeApplePayPluginPaymentStatus : Swift.Equatable {}
extension Elepay_StripeApplePay_Plugin.StripeApplePayPluginPaymentStatus : Swift.Hashable {}
extension Elepay_StripeApplePay_Plugin.StripeApplePayPluginPaymentStatus : Swift.RawRepresentable {}
